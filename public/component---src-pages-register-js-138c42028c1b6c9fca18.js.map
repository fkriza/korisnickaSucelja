{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/pages/register.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["loader","enqueue","React","createContext","LogIn","props","state","first","last","name","surname","password","email","updateInput","e","this","setState","target","value","updateLast","updateName","updateSurname","updateEMail","updatePassword","updateUsername","username","render","id","type","placeholder","onChange","bind","Component","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json"],"mappings":"4FAAA,uDAcyBA,QAAOC,QAELC,IAAMC,cAAc,K,wHCTzCC,E,oBACJ,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKC,MAAQ,CACXC,MAAO,GACPC,KAAM,GACNC,KAAM,GACNC,QAAS,GACTC,SAAU,GACVC,MAAO,IARQ,E,kHAYnBC,YAAA,SAAYC,GACVC,KAAKC,SAAS,CAAET,MAAOO,EAAEG,OAAOC,S,EAElCC,WAAA,SAAWL,GACTC,KAAKC,SAAS,CAAER,KAAMM,EAAEG,OAAOC,S,EAEjCE,WAAA,SAAWN,GACTC,KAAKC,SAAS,CAAEP,KAAMK,EAAEG,OAAOC,S,EAEjCG,cAAA,SAAcP,GACZC,KAAKC,SAAS,CAAEN,QAASI,EAAEG,OAAOC,S,EAEpCI,YAAA,SAAYR,GACVC,KAAKC,SAAS,CAAEP,KAAMK,EAAEG,OAAOC,S,EAEjCK,eAAA,SAAeT,GACbC,KAAKC,SAAS,CAAEL,SAAUG,EAAEG,OAAOC,S,EAErCM,eAAA,SAAeV,GACbC,KAAKC,SAAS,CAAES,SAAUX,EAAEG,OAAOC,S,EAErCQ,OAAA,WAAU,IAAD,EACP,OACE,yBAAKC,GAAG,aACN,yBAAKA,GAAG,cACN,+CACA,2BACEA,GAAG,SACHT,MAAOH,KAAKT,MAAMG,KAClBmB,KAAK,OACLC,YAAY,iBACZC,SAAUf,KAAKK,WAAWW,KAAKhB,SAGnC,yBAAKY,GAAG,cACN,8CACA,2BACEA,GAAG,SACHT,MAAOH,KAAKT,MAAMI,QAClBkB,KAAK,OACLC,YAAY,eACZC,SAAUf,KAAKM,cAAcU,KAAKhB,SAGtC,yBAAKY,GAAG,cACN,kDACA,2BACEA,GAAG,SACHT,MAAOH,KAAKT,MAAMM,MAClBgB,KAAK,OACLC,YAAY,eACZC,SAAUf,KAAKO,YAAYS,KAAKhB,SAGpC,yBAAKY,GAAG,cACN,6CACA,2BACEA,GAAG,SACHT,MAAOH,KAAKT,MAAMmB,SAClBG,KAAK,OACLC,YAAY,eACZC,SAAUf,KAAKS,eAAeO,KAAKhB,SAGvC,yBAAKY,GAAG,cACN,6CACA,2BACEA,GAAG,SACHT,MAAOH,KAAKT,MAAMK,SAClBiB,KAAK,WACLC,YAAY,eACZC,SAAUf,KAAKQ,eAAeQ,KAAKhB,SAGvC,gCAAQY,GAAG,iBAAX,GAA6B,eAA7B,eAEU,M,GAzFEzB,IAAM8B,WA8FX5B,a,qBCrGf,IAAsB6B,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,UALRH,EAAEI,SAAYJ,G,wFCsBhCK,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGEtC,IAAMuC,cAAcC,IAApB,eACLH,WACAC,iBACGA,EAAcG,OALV","file":"component---src-pages-register-js-138c42028c1b6c9fca18.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React, { useState } from \"react\";\nimport \"./register.css\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nimport { Router, Link, navigate } from \"@reach/router\";\nimport { render } from \"react-dom\";\n\nclass LogIn extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      first: \"\",\n      last: \"\",\n      name: \"\",\n      surname: \"\",\n      password: \"\",\n      email: \"\"\n    };\n  }\n\n  updateInput(e) {\n    this.setState({ first: e.target.value });\n  }\n  updateLast(e) {\n    this.setState({ last: e.target.value });\n  }\n  updateName(e) {\n    this.setState({ name: e.target.value });\n  }\n  updateSurname(e) {\n    this.setState({ surname: e.target.value });\n  }\n  updateEMail(e) {\n    this.setState({ name: e.target.value });\n  }\n  updatePassword(e) {\n    this.setState({ password: e.target.value });\n  }\n  updateUsername(e) {\n    this.setState({ username: e.target.value });\n  }\n  render() {\n    return (\n      <div id=\"content11\">\n        <div id=\"firstName1\">\n          <label>First Name: </label>\n          <input\n            id=\"first1\"\n            value={this.state.name}\n            type=\"text\"\n            placeholder=\"First Name ...\"\n            onChange={this.updateName.bind(this)}\n          />\n        </div>\n        <div id=\"firstName1\">\n          <label>Last Name: </label>\n          <input\n            id=\"first1\"\n            value={this.state.surname}\n            type=\"text\"\n            placeholder=\"Username ...\"\n            onChange={this.updateSurname.bind(this)}\n          />\n        </div>\n        <div id=\"firstName1\">\n          <label>E-mail adress: </label>\n          <input\n            id=\"first1\"\n            value={this.state.email}\n            type=\"text\"\n            placeholder=\"Username ...\"\n            onChange={this.updateEMail.bind(this)}\n          />\n        </div>\n        <div id=\"firstName1\">\n          <label>Username: </label>\n          <input\n            id=\"first1\"\n            value={this.state.username}\n            type=\"text\"\n            placeholder=\"Username ...\"\n            onChange={this.updateUsername.bind(this)}\n          />\n        </div>\n        <div id=\"firstName1\">\n          <label>Password: </label>\n          <input\n            id=\"first1\"\n            value={this.state.password}\n            type=\"password\"\n            placeholder=\"Password ...\"\n            onChange={this.updatePassword.bind(this)}\n          />\n        </div>\n        <button id=\"logButton111\" id=\"logButton111\">\n          Register\n        </button>{\" \"}\n      </div>\n    );\n  }\n}\nexport default LogIn;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}