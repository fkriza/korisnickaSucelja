{"version":3,"sources":["webpack:///./src/pages/logIn.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["Button","username","password","data","console","log","class","onClick","navigate","LogIn","props","state","first","last","updateInput","e","this","setState","target","value","updateLast","render","type","placeholder","onChange","bind","site","siteMetadata","postInfo","React","Component","loader","enqueue","createContext","FirstPage","to","path","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json"],"mappings":"iXAOA,SAASA,EAAOC,EAAUC,EAAUC,GAGhC,OAFAC,QAAQC,IAAIJ,EAAUC,EAAUC,GAEzB,4BAAQG,MAAQ,SAASC,QAAW,kBAAIC,mBAAS,IAAK,CAACL,WAAvD,Y,IAKLM,E,oBACF,WAAYC,GAAO,IAAD,SACd,cAAMA,IAAN,MACKC,MAAQ,CACTC,MAAQ,GACRC,KAAO,GACPV,KAAK,QALK,E,kHAsBlBW,YAAA,SAAYC,GACRC,KAAKC,SAAS,CAACL,MAAOG,EAAEG,OAAOC,S,EAEnCC,WAAA,SAAWL,GACPC,KAAKC,SAAS,CAACJ,KAAME,EAAEG,OAAOC,S,EAGlCE,OAAA,WAEI,OADAjB,QAAQC,IAAIW,KAAKL,MAAMR,MAEnB,yBAAKG,MAAQ,WACZ,yBAAKA,MAAQ,aACT,+CACA,2BAAOA,MAAQ,QAAQa,MAASH,KAAKL,MAAMC,MAAOU,KAAO,OAAOC,YAAc,iBAAiBC,SAAYR,KAAKF,YAAYW,KAAKT,SAErI,yBAAKV,MAAQ,aACT,8CACA,2BAAOA,MAAQ,OAAOa,MAASH,KAAKL,MAAME,KAAMS,KAAO,OAAOC,YAAc,gBAAgBC,SAAYR,KAAKI,WAAWK,KAAKT,SAGlI,kBAAChB,EAAD,CAAQC,SAAYe,KAAKL,MAAMC,MAAOV,SAAYc,KAAKL,MAAME,KAAMV,KAAQa,KAAKL,MAAMR,KAAKuB,KAAKC,aAAaC,a,GA3CrGC,IAAMC,WAiDXrB,a,wHClDUsB,QAAOC,QAELH,IAAMI,cAAc,I,0BCV/C,SAASC,IAEN,OACG,uBAAK5B,MAAQ,WACX,gBAAC,OAAD,CAAM6B,GAAK,UAAS,0BAAQ7B,MAAQ,SAAhB,WACpB,0BAAQA,MAAQ,eAAhB,gBACA,0BAAQA,MAAQ,SAAhB,iBAQO,4BACX,2BACF,gBAAC,SAAD,KACE,gBAAC4B,EAAD,CAAWE,KAAK,MAChB,gBAAC,UAAD,CAAOA,KAAK,e,qBCxBhB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,UALRH,EAAEI,SAAYJ,G,wFCsBhCK,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGEf,IAAMgB,cAAcC,IAApB,eACLH,WACAC,iBACGA,EAAcG,OALV","file":"component---src-pages-index-js-8779442937fd7417e90c.js","sourcesContent":["import React from 'react'\nimport \"./logIn.css\"\nimport {graphql, useStaticQuery} from 'gatsby'\nimport FirstPage from './index'\nimport {Router, Link, navigate} from '@reach/router'\nimport {render} from 'react-dom'\n\nfunction Button(username, password, data){\n    console.log(username, password, data)\n\n    return <button class = \"button\" onClick = {()=>navigate('/', {data})}>Click me</button>\n\n\n}\n\nclass LogIn extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            first : \"\",\n            last : \"\",\n            data:    useStaticQuery(graphql`\n            query MyQuery {\n                    site{\n                      siteMetadata{\n                        postInfo{\n                          username\n                          password\n                        }\n                      }\n                    }\n                  } \n                  `)\n          ,\n        };\n    \n    }\n    \n    updateInput(e){\n        this.setState({first: e.target.value})\n    }\n    updateLast(e){\n        this.setState({last: e.target.value})\n    }\n    \n    render(){\n        console.log(this.state.data)\n        return(\n            <div class = \"content\">\n             <div class = \"firstName\">\n                 <label>First Name: </label>\n                 <input class = \"first\" value = {this.state.first} type = \"text\" placeholder = \"First Name ...\" onChange = {this.updateInput.bind(this)}/>\n             </div>\n             <div class = \"firstName\">\n                 <label>Last Name: </label>\n                 <input class = \"last\" value = {this.state.last} type = \"text\" placeholder = \"Last Name ...\" onChange = {this.updateLast.bind(this)}/>\n             </div>\n             \n            <Button username = {this.state.first} password = {this.state.last} data = {this.state.data.site.siteMetadata.postInfo}/>\n         </div>\n        );\n    }\n}\n\nexport default LogIn","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import * as React from 'react';\nimport './index.css'\nimport LogIn from './logIn'\nimport {useStaticQuery, graphql} from 'gatsby'\nimport {Router, Link} from '@reach/router'\nimport {render} from 'react-dom'\nfunction FirstPage(){\n    \n   return(\n      <div class = \"content\">\n        <Link to = '/logIn'><button class = \"login\">Log In</button></Link>\n        <button class = \"registerNow\">Register Now</button>\n        <button class = \"guest\">Use as Guest</button>\n      </div>\n   )\n  \n   \n}\n\n\nexport default () => (\n    <div>\n  <Router>\n    <FirstPage path=\"/\" />\n    <LogIn path=\"/logIn\"/>\n  </Router></div>\n)","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}